import requests
import telebot
import time
import json

# üîë –¢–≤–æ–π —Ç–æ–∫–µ–Ω —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
TELEGRAM_TOKEN = "–¢–û–ö–ï–ù_–¢–í–û–ï–ì–û_–ë–û–¢–ê"
CHAT_ID = "–¢–í–û–ô_CHAT_ID"

bot = telebot.TeleBot(TELEGRAM_TOKEN)

# –•—Ä–∞–Ω–∏–º —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
sent_tokens = set()

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ —Å DexScreener
def fetch_new_tokens():
    url = "https://api.dexscreener.com/latest/dex/tokens/solana"
    try:
        resp = requests.get(url, timeout=10)

        if resp.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: —Å—Ç–∞—Ç—É—Å {resp.status_code}")
            return []

        data = resp.json()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        with open("api_debug.json", "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False, indent=2)

        if not data or "pairs" not in data or data["pairs"] is None:
            print("‚ö† API –≤–µ—Ä–Ω—É–ª–æ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –∏–ª–∏ –Ω–µ—Ç –ø–æ–ª—è 'pairs'")
            return []

        return data["pairs"][:5]  # –±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–µ 5 –ø–∞—Ä
    except Exception as e:
        print("–û—à–∏–±–∫–∞ API:", e)
        return []

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
def send_token_alert(token):
    try:
        name = token.get("baseToken", {}).get("name", "N/A")
        symbol = token.get("baseToken", {}).get("symbol", "N/A")
        price = token.get("priceUsd", "N/A")
        url = token.get("url", "https://dexscreener.com/")

        message = (
            f"üü¢ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω!\n\n"
            f"üìõ –ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
            f"üîπ –°–∏–º–≤–æ–ª: {symbol}\n"
            f"üí≤ –¶–µ–Ω–∞: {price}\n"
            f"üåê DexScreener: {url}\n"
            f"üëõ Phantom: https://phantom.app/"
        )

        bot.send_message(CHAT_ID, message)
        print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {name} ({symbol})")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", e)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
def main():
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, —Å–ª–µ–∂—É –∑–∞ Solana...")
    while True:
        tokens = fetch_new_tokens()
        for token in tokens:
            address = token.get("pairAddress")
            if not address:
                continue

            if address in sent_tokens:
                print(f"‚ö† {token.get('baseToken', {}).get('symbol', '???')} —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏, –ø—Ä–æ–ø—É—Å–∫...")
                continue

            send_token_alert(token)
            sent_tokens.add(address)

        time.sleep(60)  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É

if __name__ == "__main__":
    main()
