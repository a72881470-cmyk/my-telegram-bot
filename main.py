import os
import threading
import http.server
import socketserver
import logging
import websocket
import requests
import time

logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(message)s")

# === Telegram ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

def send_telegram(msg: str):
    if not BOT_TOKEN or not CHAT_ID:
        return
    try:
        requests.post(
            f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage",
            json={"chat_id": CHAT_ID, "text": msg}
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

# === HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è Railway ===
PORT = int(os.getenv("PORT", 8080))

def run_http_server():
    handler = http.server.SimpleHTTPRequestHandler
    with socketserver.TCPServer(("0.0.0.0", PORT), handler) as httpd:
        logging.info(f"üåç HTTP —Å–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç {PORT}")
        send_telegram(f"üåç HTTP —Å–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç {PORT}")
        httpd.serve_forever()

# === WebSocket PumpPortal ===
def on_message(ws, message):
    logging.info(f"üì© –ü—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message}")
    send_telegram(f"üì© {message}")

def on_open(ws):
    logging.info("üîó WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω")
    send_telegram("üîó WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ PumpPortal")

def start_websocket():
    while True:  # –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
        try:
            ws = websocket.WebSocketApp(
                "wss://pumpportal.fun/api/data",
                on_message=on_message,
                on_open=on_open
            )
            ws.run_forever()
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ WebSocket: {e}")
            send_telegram(f"‚ùå –û—à–∏–±–∫–∞ WebSocket: {e}")
        logging.info("‚ôªÔ∏è –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥‚Ä¶")
        time.sleep(5)

if __name__ == "__main__":
    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –õ–æ–≤–∏–º –º–µ–º–∫–æ–∏–Ω—ã Solana‚Ä¶")

    # –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=run_http_server, daemon=True).start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º WebSocket (—Å –∞–≤—Ç–æ-–ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º)
    start_websocket()
