import requests
import time
from datetime import datetime, timezone

# ------------------- –ù–ê–°–¢–†–û–ô–ö–ò -------------------
BOT_TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù_–ë–û–¢–ê"
CHAT_ID = "–¢–í–û–ô_CHAT_ID"

API_URL = "https://api.dexscreener.com/latest/dex/tokens/"
WATCH_TOKEN = "0x..."   # –∫–æ–Ω—Ç—Ä–∞–∫—Ç –º–æ–Ω–µ—Ç—ã –∫–æ—Ç–æ—Ä—É—é –º–æ–Ω–∏—Ç–æ—Ä–∏–º

CHECK_INTERVAL = 30  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
# -------------------------------------------------


def send_telegram(msg: str):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    try:
        r = requests.post(url, data={"chat_id": CHAT_ID, "text": msg}, timeout=10)
        if r.status_code != 200:
            print(f"‚ö† –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {r.text}")
    except Exception as e:
        print("‚ö† –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:", e)


def check_token():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –Ω–∞ Dexscreener"""
    try:
        url = API_URL + WATCH_TOKEN
        r = requests.get(url, timeout=10)

        if r.status_code != 200:
            print(f"‚ö† –û—à–∏–±–∫–∞ API Dexscreener: {r.status_code}")
            return

        data = r.json()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
        if not data or "pairs" not in data or not data["pairs"]:
            print("‚ö† –ú–æ–Ω–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
            return

        pair = data["pairs"][0]

        # -------- –í–æ–∑—Ä–∞—Å—Ç –ø–∞—Ä—ã --------
        created_at = pair.get("pairCreatedAt")
        created_dt = None

        if isinstance(created_at, int):  # timestamp –≤ ms
            created_dt = datetime.fromtimestamp(created_at / 1000, tz=timezone.utc)
        elif isinstance(created_at, str):  # ISO8601
            try:
                created_dt = datetime.fromisoformat(created_at.replace("Z", "+00:00"))
            except Exception:
                created_dt = datetime.now(timezone.utc)
        else:
            created_dt = datetime.now(timezone.utc)

        age_min = (datetime.now(timezone.utc) - created_dt).total_seconds() / 60
        # ------------------------------

        # –î–∞–Ω–Ω—ã–µ –æ —Ü–µ–Ω–µ
        price = pair.get("priceUsd") or "N/A"
        symbol = pair.get("baseToken", {}).get("symbol", "?")
        url_dex = pair.get("url", "–ù–µ—Ç —Å—Å—ã–ª–∫–∏")

        msg = (
            f"üö® –ù–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω {symbol}\n"
            f"üí∞ –¶–µ–Ω–∞: {price} USD\n"
            f"‚è± –í–æ–∑—Ä–∞—Å—Ç –ø–∞—Ä—ã: {age_min:.1f} –º–∏–Ω—É—Ç\n"
            f"üåê Dexscreener: {url_dex}"
        )

        print(msg)
        send_telegram(msg)

    except Exception as e:
        print("‚ö† –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞:", e)


def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, —Å–ª–µ–∂–µ–Ω–∏–µ –∑–∞ –º–æ–Ω–µ—Ç–æ–π...")
    while True:
        check_token()
        time.sleep(CHECK_INTERVAL)


if __name__ == "__main__":
    main()
